@page "/Portfolio"
@using Website.Shared.Components.Animation
@using Website.Pages.Portfolio
@layout Shared.Layouts.EmptyLayout;
@inject IJSRuntime jsRuntime;

<Parallax/>
<SALWrapper/>

<!-- Fixed BG -->
<div id="BG">
    <div style="position:absolute; width:100%; height:100%; background-color:rgb(31, 32, 41);"/>
    <div class="Pattern" style="position:absolute; width:100%; height:100%;"/>
</div>

<!-- Nav Bar -->
<nav id="PortfolioNavbar" class="navbar fixed-top navbar-expand-sm navbar-dark" style="background-color: rgba(33, 37, 41, .75);">
	<div  class="container-fluid">
	    <a href="/" class="navbar-brand mb-0 h1">Brian Hinkle</a>
        <button id="NavbarExpandButton" type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#navbarItems" aria-controls="navbarItems" aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
        
		<div class="collapse navbar-collapse" id="navbarItems">
            <ul class="nav-pills navbar-nav ms-auto">
                <li class="nav-item">
                    <a id="portfolioNavLink" class="nav-link" style="cursor: pointer;" @onclick:preventDefault @onclick="@( () => ScrollToElementWithNavbarOffset("portfolio") )"      >Portfolio</a>
                </li>
                <li class="nav-item">
                    <a id="aboutNavLink" class="nav-link" style="cursor: pointer;" @onclick:preventDefault @onclick="@( () => ScrollToElementWithNavbarOffset("about")     )"      >About</a>
                </li>
                <li class="nav-item">
                    <a id="contactNavLink" class="nav-link" style="cursor: pointer;" @onclick:preventDefault @onclick="@( () => ScrollToElementWithNavbarOffset("contact")   )"      >Contact</a>
                </li>
            </ul>
		</div>
	</div>
</nav>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" style="width:0; height:0;"> @* make width and height 0 so you can't see it *@
    <div class="modal-content d-flex flex-column align-items-center justify-content-center">
        <video muted autoplay loop controls playsinline disablePictureInPicture controlsList="nofullscreen nodownload" src="@ModalPortfolioItem?.VideoSrc" style="height: 80vh;" />
    </div>
  </div>
</div>

<!-- Page's Content -->
<div id="ParallaxWrapper">
    <header id="header" class="ParallaxContainer d-flex flex-column align-items-center justify-content-center" style="width:100vw; height:90vh; position:relative; overflow:hidden;">
        <video id="PortfolioHeaderVideo" muted autoplay loop playsinline disablePictureInPicture src="videos/TestVid.mp4" class="ParallaxElement" data-parallaxspeed=".25" style="position: absolute; min-height: 100%; min-width: 100%;" />
    
        <div class="d-flex flex-column align-items-center justify-content-center" style="position: relative; min-height: 100%; min-width: 100%; background-color: rgba(26, 188, 156, .5);">
            @*<img style="max-height:100px; max-width:100px;" src="PortfolioTemplateResources/assets/img/avataaars.svg" alt="..." />*@
            <br />
            <h1 style="color:white;">BRIAN HINKLE</h1>

            <!-- Make divider here-->
                
            <p style="color:white;">Unreal Developer</p>
        </div>
    </header>


    <section id="portfolio" class="page-section portfolio-section">
        <div class="row align-items-center">
            <div class="col-4">
                <div class="dots-pattern"/>
            </div>

            <h1 class="col-4 page-section-heading text-center">Portfolio</h1>
                            
            <div class="col-4">
                <div class="dots-pattern"/>
            </div>
        </div>
    


        

        
        <section class="portfolio-item">
            <PortfolioItem TitleText="Strength collision queries" VideoSrc="videos/Portfolio/Demos/Demo_StrengthCollisionQueries.mp4" OnFullscreenBtnPressed=@ShowPopupModal>
                <Description>
                    <p>
                        These are custom collision queries that are dependent on the concept of strength, becoming weaker as they ricochet and travel through penetrable material (the air as well). It is built on top of a collection of specialized collision queries which introduce the concept of penetrations while still keeping the distinction between blocking hits and overlaps (trigger boxes). These optionally provide exit hit results. All collision queries are generic to both line traces and shape sweeps.
                        <br>
                        This demo shows strength collision queries being used with sphere sweeping in a shooter-type game.
                    </p>
                </Description>
            </PortfolioItem>
        </section>
        <section class="portfolio-item">
            <PortfolioItem TitleText="Sword Game" VideoSrc="videos/Portfolio/Demos/Demo_SwordGame.mp4" OnFullscreenBtnPressed=@ShowPopupModal>
                <Description>
                    <p>
                        One day my brother and I decided to create a game in two weeks as a sort of unofficial game jam where there were no rules besides the time constraint. The result was a scary/funny hide and seek game to play online with friends! This project was 100% in blueprints.
                    </p>
                </Description>
            </PortfolioItem>
        </section>
        <section class="portfolio-item">
            <PortfolioItem TitleText="Ability System Setup" VideoSrc="videos/Portfolio/Demos/Demo_AbilitySystemSetup.mp4" OnFullscreenBtnPressed=@ShowPopupModal>
                <Description>
                    <p>
                        This is a C++ plugin extending Epic's Gameplay Ability System, creating a solid foundation for using GAS and eliminating boilerplate code. Its key feature, demonstrated above, is the AvatarActorExtension component.
                        <br>
                        The AvatarActorExtension component is a generalized component that can initialize/uninitialize an Avatar Actor, given an AbilitySystemComponent. It stays agnostic to AbilitySystemComponent location and supports any Avatar Actor. For Avatar Actors that are Pawns, there is a more specialized "PawnAvatarActorExtension" component which inherits and provides extra GAS input binding logic. 
                    </p>
                </Description>
            </PortfolioItem>
        </section>
        <section class="portfolio-item">
            <PortfolioItem TitleText="Input Setup" VideoSrc="videos/Portfolio/Demos/Demo_InputSetup.mp4" OnFullscreenBtnPressed=@ShowPopupModal>
                <Description>
                    <p>
                        Plugin improving the input workflow in C++. Makes use of Gameplay Tags to identify Input Actions using a configurable map in the plugin's Developer Settings. Other modules external from the game project's module can contribute to the map of Input Actions as long as they have us as a dependency.
                    </p>
                </Description>
            </PortfolioItem>
        </section>


        
    </section>



        
    <!-- About Section-->
    <div id="about" style="position:relative;">
        <div class="page-section text-white mb-0">
            <div class="container">
                <!-- About Section Heading-->
                <h2 class="page-section-heading text-center text-uppercase" style="padding-bottom:2rem;">About</h2>
            
                <!-- Make divider here... -->


                @* 
                    Hi there! I'm an Unreal programmer passionate about creating games "the right way" with scalable and reusable gameplay systems! Recently I graduated school with a computer science degree and I'm looking forward to working in the industry with others on cool projects! Currently my brother and I are in the process of forming a company which sells both games and code plugins which we use in our games. Something I found I really enojoy is working on projects with other developers. I realized this after my brother joined in and I was no longer a solo indie developer. 
                    I remember the moment I began feeling inspired to learn game development. It was sophomore year, and I realized if I were to pursue my intrest, it would require me to switch majors and extend my studies to a later graduation date. 4 years later I graduate with a diploma in my new major, computer science!  Learning new things is what I strive for, and it's been a blast working towards  It began when I switched majors to computer science because of my fasination with game development. Growing up on computers, I've always had a strong connection with them It's been a blast up to this point, always learning ________. Growing up in a home with three brothers and eight computers, 
                Growing up in a home with three brothers, , a  As someone who has proven to himself that I can do , I believe I have what it takes .*@ 

                <!-- About Section Content-->
                <div class="row">
                    <div class="col-lg-2"/>
                    <div class="col-lg-4">
                        <p class="lead">
                            Blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah
                        </p>
                    </div>
                    <div class="col-lg-4">
                        <p class="lead">
                            Blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah
                        </p>
                    </div>
                    <div class="col-lg-2"/>
                </div>
            </div>
        </div>
    </div>


    <div style="position:relative;">
        <!-- Footer-->
        <footer class="text-center" style="padding-top: 5rem; padding-bottom: 5rem; background-color: rgba(44, 62, 80, .5); color: #fff;">
            <div id="contact" class="container">
                <div class="row">
                    <!-- Email -->
                    <div class="col-lg-3">
                        <img src="images/contact-email.png" style="height:1.6rem; margin:.75rem;"/>
                        <br>
                        b2hinkle@gmail.com
                    </div>
                    <!-- Phone -->
                    <div class="col-lg-3">
                        <img src="images/contact-phone.png" style="height:2rem; margin:.5rem;"/>
                        <br>
                        (704) 604 9356
                    </div>
                    <!-- Github -->
                    <div class="col-lg-3">
                        <img src="images/contact-github.png" style="height:2.5rem; margin:.25rem;"/>
                        <br>
                        <a href="https://github.com/brian2524">Brian2524</a>
                    </div>
                    <!-- Linkedin -->
                    <div class="col-lg-3">
                        <img src="images/contact-linkedin.png" style="height:2rem; margin:.5rem;"/>
                        <br>
                        <a href="https://www.linkedin.com/in/brian-hinkle-0320801b5">Linkedin</a>
                    </div>
                </div>
            </div>
        </footer>
        <!-- Copyright Section-->
        <div class="d-flex align-items-center justify-content-center text-center text-white" style="height: 15px; width: 100%; padding-top: 1.5rem; padding-bottom: 1.5rem; background-color: #1a252f;">
            @*<small>Copyright &copy; Your Website 2021</small>*@
            <small>@year Brian Hinkle</small>
        </div>
    </div>
</div>
        


    


@code 
{
    private IJSObjectReference jsObjRef;    // js interactor
    private int year = DateTime.Now.Year;
    private PortfolioItem ModalPortfolioItem;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            jsObjRef = await jsRuntime.InvokeAsync<IJSObjectReference>("import", "./Pages/Portfolio/Portfolio.razor.js");
            await jsObjRef.InvokeVoidAsync("OnAfterRenderAsync");
        }
    }

    public async Task ScrollToElementWithNavbarOffset(string elementId)
    {
        await jsObjRef.InvokeVoidAsync("ScrollToElementWithNavbarOffset", elementId);
    }

    public async void ShowPopupModal(PortfolioItem PortfolioItemToShowModelFor)
    {
        ModalPortfolioItem = PortfolioItemToShowModelFor;
        await jsObjRef.InvokeVoidAsync("ShowPopupModal");
    }
}
