@page "/Portfolio"
@using Website.Shared.Components.Animation
@using Website.Pages.Portfolio
@layout Shared.Layouts.EmptyLayout;
@inject NavigationManager NavManager
@inject IJSRuntime jsRuntime;

<Parallax @ref="ParallaxComponent" autoInit=false />
<SALWrapper/>

<!-- Nav Bar -->
<nav id="PortfolioNavbar" class="navbar fixed-top navbar-expand-sm navbar-dark" style="background-color: rgba(33, 37, 41, .75);">
	<div class="container-fluid">
        <span class="navbar-brand">
            <a href="/" class="navbar-brand mb-0 h1">Brian Hinkle</a>
            <button type="button" class="btn btn-sm btn-outline-light" onclick="window.open('@ResumeFilePath', '_blank')">My Resumé</button>
        </span>
        <button id="NavbarExpandButton" type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#navbarItems" aria-controls="navbarItems" aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
        
		<div class="collapse navbar-collapse" id="navbarItems">
            <ul class="nav-pills navbar-nav ms-auto">
                <li class="nav-item">
                    <a id="projectsNavLink" class="nav-link" style="cursor: pointer;" @onclick:preventDefault @onclick="@( () => ScrollToElementWithNavbarOffset("projects") )"      >Projects</a>
                </li>
                <li class="nav-item">
                    <a id="aboutNavLink" class="nav-link" style="cursor: pointer;" @onclick:preventDefault @onclick="@( () => ScrollToElementWithNavbarOffset("about")     )"      >About</a>
                </li>
                <li class="nav-item">
                    <a id="contactNavLink" class="nav-link" style="cursor: pointer;" @onclick:preventDefault @onclick="@( () => ScrollToElementWithNavbarOffset("contact")   )"      >Contact</a>
                </li>
            </ul>
		</div>
	</div>
</nav>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content d-flex flex-column align-items-center justify-content-center">
        <video muted autoplay loop controls playsinline disablePictureInPicture controlsList="nodownload" src="@ModalPortfolioItem?.VideoSrc" style="width:80vw;" />
    </div>
  </div>
</div>

<!-- Scroll Indicator -->
<div id="ScrollIndicator" style="position:fixed; top:80%; left: 50%; z-index:5;"/>

<!-- Page's Content -->
<div id="ParallaxWrapper">
    <h1 style="position:absolute;"></h1> @* dummy heading to prevent Blazor from scrolling to one of the headings lower in the page on page load *@
    <header id="header" class="ParallaxContainer d-flex flex-column align-items-center justify-content-center">
        @if (isMobile == null)
        {
            <div style="position:absolute; height:100%; width:100%;" data-parallaxspeed=".25" class="ParallaxElement d-flex flex-column align-items-center justify-content-center">
                <p class="text-white" style="font-size:2rem;">Loading video...</p>
            </div>
        }
        else if (isMobile == false)
        {
            <iframe id="HeaderVideo" class="ParallaxElement" data-parallaxspeed=".25" src=@($"https://www.youtube.com/embed/{HeaderYoutubeVideoId}?yt:stretch=16:9&vq=hd1080p&autoplay=1&loop=1&playlist={HeaderYoutubeVideoId}&color=red&mute=1&playsinline=1&iv_load_policy=3&rel=0&showinfo=0&autohide=1&controls=0&modestbranding=1") allowtransparency="true" frameborder="0" allow="autoplay; encrypted-media;" />
        }
        else if (isMobile == true)  // can't youtube embed autoplay on mobile so we'll just use the video tag for autoplay
        {
            <video id="HeaderVideo" class="ParallaxElement" data-parallaxspeed=".25" muted autoplay loop playsinline disablePictureInPicture src="videos/Portfolio/Header.mp4" />
        }
        <div style="position: absolute; min-height: 100%; min-width: 100%; background-color: rgba(26, 188, 156, .5);"/>
        <div style="position:relative; width:100vw; height:100vh; display:flex; z-index:11;">
            <span style="align-self: flex-end; font-size: 2rem;" class="text-white">
                BRIAN HINKLE - MULTIPLAYER GAME PROGRAMMER
            </span>
        </div>
    </header>

    <section id="projects" class="page-section portfolio-section">
        <h2 class="page-section-heading text-center">Projects</h2>
    


        

        <section class="d-flex align-items-center justify-content-center">
            <div style="width:90vw;">
                <PortfolioItem TitleText="Strength collision queries" VideoSrc="videos/Portfolio/Demos/Demo_StrengthCollisionQueries.mp4" TeamSize="2" Duration="~2 months" ProjectStatus="Finished" GithubLink="https://github.com/brian2524/GameCore/tree/master/Source/GameCore/Public/BlueprintFunctionLibraries/CollisionQuery" OnFullscreenBtnPressed=@ShowPopupModal>
                    <Description>
                        <p>
                            Developed custom collision queries that are dependent on the concept of strength. They become weaker as they ricochet and travel through penetrable hits (the air as well). 
                            Implementing penetrations was done by creating a collection of specialized collision queries that introduce the concept of penetrations, providing optional exit hits and keeping the distinction 
                            between blocking hits and overlaps. All collision queries are generic to both line traces and shape sweeps.
                            <br>
                            The video demonstrates strength collision queries being used with sphere-sweeping in a shooter type game.
                        </p>
                    </Description>
                </PortfolioItem>
                <PortfolioItem TitleText="Ability System Setup" VideoSrc="videos/Portfolio/Demos/Demo_AbilitySystemSetup.mp4" TeamSize="2" Duration="~1 year" ProjectStatus="Finished" GithubLink="https://github.com/ChristianHinko/AbilitySystemSetup" OnFullscreenBtnPressed=@ShowPopupModal>
                    <Description>
                        <p>
                            Developed a C++ plugin that extends Epic's Gameplay Ability System. It provides a foundation and
                            an efficient workflow to speed up development, eliminate boilerplate code, and provide
                            scalable design.
                            <br>
                            The AvatarActorExtension component (demonstrated above) is a generalized component 
                            for initializing/uninitializing an Avatar Actor when provided with an AbilitySystemComponent and optional AbilitySets. 
                            It stays agnostic to AbilitySystemComponent location and supports any Avatar Actor. For Avatar Actors that are Pawns, 
                            a more specialized "PawnAvatarActorExtension" component inherits and provides extra GAS input binding logic.
                        </p>
                    </Description>
                </PortfolioItem>
                <PortfolioItem TitleText="Property Wrapper" VideoSrc="videos/Portfolio/Demos/Demo_PropertyWrapper.mp4" TeamSize="2" Duration="~16 months" ProjectStatus="Finished" GithubLink="https://github.com/brian2524/GameCore/tree/master/Source/GameCore/Public/Types/PropertyWrappers" OnFullscreenBtnPressed=@ShowPopupModal>
                    <Description>
                        <p>
                            Developed a generic property wrapper that allows you to respond to changes in your variables’ value. This simplifies and cleans up code bases.
                            The initial intention was to improve the workflow of push-model replication but use cases have become more diverse. The wrapper is implemented as a lightweight UStruct, 
                            with functionality implemented generically across all types.
                            <br>
                            The video demonstrates the use of the integer property wrapper with clip ammo. 
                            It binds to its changes to print to the screen when the clip ammo changes.
                        </p>
                    </Description>
                </PortfolioItem>
                <PortfolioItem TitleText="Input Setup" VideoSrc="videos/Portfolio/Demos/Demo_InputSetup.mp4" TeamSize="2" Duration="~1 month" ProjectStatus="Finished" GithubLink="https://github.com/ChristianHinko/InputSetup" OnFullscreenBtnPressed=@ShowPopupModal>
                    <Description>
                        <p>
                            Developed a C++ plugin that extends Enhanced Input and improves workflows both in code and in editor by streamlining the process for defining and accessing Input Actions.
                            It makes use of Gameplay Tags to identify Input Actions via a configurable map in the project settings. 
                            The map is stored in an EngineSubsystem, creating a centralized place for all Input Actions and eliminating duplicate code scenarios. 
                            Modules external to the game project can also contribute to the Input Actions map through a provided Primary Data Asset. 
                            Dynamically loaded modules (e.g. Game Features) are also supported for adding input actions.
                        </p>
                    </Description>
                </PortfolioItem>
            </div>
        </section>


        
    </section>



        
    <!-- Page ending content -->
    <div class="ParallaxContainer" style="position:relative;">
        <div class="EndingBackground ParallaxElement" data-parallaxspeed=".3" style="position:absolute;"/> @* radial gradients *@

        <!-- About Section -->
        <div id="about" class="page-section text-white mb-0">
            <div class="container">
                <!-- About Section Heading -->
                <h2 class="page-section-heading text-center text-uppercase" style="padding-bottom:2rem;">About Me</h2>
            
                <!-- Make divider here... -->
                <div class="row">
                    <div class="col-lg-2"/>
                    <div data-sal-wrapper="fade" class="col-lg-8">
                        <p class="lead" style="margin:0; text-indent: 3em;">
                            Hi there! I'm an Unreal programmer passionate about creating games with scalable and modular gameplay systems!
                            Game development started as a hobby, and it quickly became something I knew I wanted to pursue. Switching majors 
                            to computer science improved my raw programming skills and unified existing knowledge I had in Unreal C++ with traditional C++.
                        </p>
                        <p class="lead" style="margin:0; text-indent: 3em;">
                            Sometimes I’d experience inefficiencies in my workflows, but these experiances were helpful because it taught me the value of efficiency
                            and new approaches to design. One of my favorite parts of development is learning new things because it opens the door to better designs, 
                            and I give high priority to design quality.
                        </p>
                        <p class="lead" style="margin:0; text-indent: 3em;">
                            @*I find collaboration makes everything more fun! Now being graduated,
                            I’m looking forward to meeting new people and making games!*@
                        </p>
                    </div>
                    <div class="col-lg-2"/>
                </div>
            </div>
        </div>

        <!-- Footer -->
        <footer class="text-center" style="padding-top: 5rem; padding-bottom: 5rem; background-color: rgba(44, 62, 80, .3); color: #fff;">
            <div id="contact" class="container">
                <div class="row">
                    <!-- Email -->
                    <div class="col-lg-3">
                        <img src="images/contact-email.png" style="height:1.6rem; margin:.75rem;"/>
                        <br>
                        b2hinkle@gmail.com
                    </div>
                    <!-- Phone -->
                    <div class="col-lg-3">
                        <img src="images/contact-phone.png" style="height:2rem; margin:.5rem;"/>
                        <br>
                        (704) 604 9356
                    </div>
                    <!-- Github -->
                    <div class="col-lg-3">
                        <img src="images/contact-github.png" style="height:2.5rem; margin:.25rem;"/>
                        <br>
                        <a href="https://github.com/brian2524" target="_blank" rel="noopener noreferrer">Brian2524</a>
                    </div>
                    <!-- Linkedin -->
                    <div class="col-lg-3">
                        <img src="images/contact-linkedin.png" style="height:2.1rem; margin:.5rem;"/>
                        <br>
                        <a href="https://www.linkedin.com/in/brian-hinkle-0320801b5" target="_blank" rel="noopener noreferrer">Linkedin</a>
                    </div>
                </div>
            </div>
        </footer>

        <!-- Copyright Section -->
        <div class="d-flex align-items-center justify-content-center text-center text-white" style="height: 15px; width: 100%; padding-top: 1.5rem; padding-bottom: 1.5rem; background-color: #1a252f;">
            @*<small>Copyright &copy; Your Website 2021</small>*@
            <small>@year Brian Hinkle</small>
        </div>
    </div>
</div>
        


    


@code 
{
    private IJSObjectReference jsObjRef;    // js interactor
    private string ResumeFilePath = "Documents/Resume_Brian_Hinkle.pdf";
    private Parallax ParallaxComponent;
    private int year = DateTime.Now.Year;
    private PortfolioItem ModalPortfolioItem;
    private bool? isMobile { get; set; } = null;
    private string HeaderYoutubeVideoId = "pewCBM5C0vA";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            jsObjRef = await jsRuntime.InvokeAsync<IJSObjectReference>("import", "./Pages/Portfolio/Portfolio.razor.js");
            await jsObjRef.InvokeVoidAsync("OnAfterRenderAsync");

            isMobile = await jsRuntime.InvokeAsync<bool>("isMobile");
            StateHasChanged();
            await ParallaxComponent.Init();
        }
    }

    public async Task ScrollToElementWithNavbarOffset(string elementId)
    {
        await jsObjRef.InvokeVoidAsync("ScrollToElementWithNavbarOffset", elementId);
    }

    public async void ShowPopupModal(PortfolioItem PortfolioItemToShowModelFor)
    {
        ModalPortfolioItem = PortfolioItemToShowModelFor;
        await jsObjRef.InvokeVoidAsync("ShowPopupModal");
    }
}
