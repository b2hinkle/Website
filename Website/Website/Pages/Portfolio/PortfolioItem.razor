<div id="PortfolioItem" class="container" style="position:relative; cursor: pointer;" onclick="@OnFullecreenBtnPressed">
    <div class="row align-items-center mb-5" style="background-color:rgb(100,100,100); background-color:rgba(255,255,255,.25);"> @* fallback color if alpha isn't supported *@
        <div data-sal-wrapper="zoom-out" class="col-md-4">
            <h2 class="text-center text-white">
                @TitleText
            </h2>
        </div>

        <div class="col-md-8 d-flex flex-column align-items-center justify-content-center" style="position:relative; height:100%; overflow:hidden; padding:0;">
            <video muted autoplay loop style="position: relative; width: 100%;">
                <source src="@VideoSrc" type="video/mp4">
            </video>
        </div>
    </div>
    <div data-sal-wrapper="zoom-out" class="row align-items-center">
        <div class="col-md-2"/>
        <div class="col-md-8 text-center text-white">
            @Description
        </div>
        <div class="col-md-2"/>
    </div>
</div>

@code 
{
    [Parameter]
    public string TitleText { get; set; }
    [Parameter]
    public RenderFragment Description { get; set; }
    [Parameter]
    public string VideoSrc { get; set; }

    [Parameter]
    public EventCallback<PortfolioItem> OnFullscreenBtnPressed { get; set; }

    async private void OnFullecreenBtnPressed()
    {
        await OnFullscreenBtnPressed.InvokeAsync(this);
    }
}
