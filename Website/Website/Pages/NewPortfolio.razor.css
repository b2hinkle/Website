#ParallaxWrapper {
    position: relative; /* make elements in this group relative to the whole pange, because we are going to have to use absolutly positioned elements */
    width: 100vw;
    height: 100vh;
    box-sizing:border-box;

    /* BEGIN 3D rendering context */
    -webkit-transform-style: preserve-3d;
    transform-style: preserve-3d;
    /* END 3D rendering context */
    perspective-origin: center; /* vanishing point in center of screen */
    perspective: 1px; /* easy value (translating on z by -1 will make it appear twice as small, so just scale it up by 2) */

    overflow-x: hidden;
    overflow-y: auto;
}







/* TODO: 
    - maybe have the dots fade in a certain direction
    - maybe gradient the background color
*/
.PortfolioDottedBG {
    background-image: 
        radial-gradient(rgba(255,255,255,.2) 5%, transparent 5%, transparent 100%), /* % values for first 2 colors are the size of the dot */
        linear-gradient(rgba(20, 20, 20, 1), #481217);
    background-size: 
        40px 40px,
        auto auto;
    /* vertical */
    /*background: rgb(2,0,36);
    background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(0,0,0,1) 48%, rgba(0,0,0,1) 48%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 52%, rgba(0,0,0,1) 100%);*/
    /* horizontal */
    background: rgb(2,0,36);
    background: linear-gradient(0deg, rgba(2,0,36,1) 0%, rgba(0,0,0,1) 49.9%, rgba(0,0,0,1) 49.9%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 5.1%, rgba(0,0,0,1) 100%);
}

.PortfolioDottedBGTransform {
    position: absolute;
    z-index: -1;

/* BEGIN center div to parent el */
    left: 0px;
    right: 0px;
    bottom: 0px;
    top: 0px;
    margin: auto;
/* END center div to parent el */
    /* So now we are centered in the wrapper div, which is only the height of the viewport, but we want our BG's center to start where the content's center is so we will offset it down some.... */
    top: 1000%; /* offset */

    width: 100%;
    height: 100%;

    transform: translateZ(-50px) scale(81);
}


