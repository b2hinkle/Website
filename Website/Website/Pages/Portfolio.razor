@page "/Portfolio"
@using Website.Shared.Components
@layout Shared.Layouts.EmptyLayout;
@inject IJSRuntime jsRuntime;
@inject NavigationManager NavManager;

<nav id="PortfolioNavbar" class="navbar fixed-top navbar-expand-sm navbar-dark" style="background-color: rgba(33, 37, 41, .75); transition: background-color .25s;">
	<div  class="container-fluid">
	    <a href="/" class="navbar-brand mb-0 h1">Brian Hinkle</a>
        <button id="NavbarExpandButton" type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#navbarItems" aria-controls="navbarItems" aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
        
		<div class="collapse navbar-collapse" id="navbarItems">
            <ul class="nav-pills navbar-nav ms-auto">
                @*
                    href here is strictly used for the navbar button highlighting for ScrollSpy. We don't have it taking us anywhere since Blazor is a pain with hash routes.
                    Instead we're just manually scrolling using javascript, also this allows us to implement scrolling with the NavbarOffset.
                *@
                <li class="nav-item">
                    <a class="nav-link" @onclick:preventDefault href="#portfolio"   @onclick="@( () => ScrollToElementWithNavbarOffset("portfolio")     )"      >Portfolio</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" @onclick:preventDefault href="#about"       @onclick="@( () => ScrollToElementWithNavbarOffset("about")         )"      >About</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" @onclick:preventDefault href="#contact"     @onclick="@( () => ScrollToElementWithNavbarOffset("contact")       )"      >Contact</a>
                </li>
                @*NOTE: Only reason we have this "Header" li is so we can take advantage of ScrollSpy's section watching logic for the header. We don't want a navbar button for the header but ScrollSpy requires it so we collapse it.*@
                <li class="nav-item collapse">
                    <a class="nav-link" @onclick:preventDefault href="#header">Header</a>
                </li>
            </ul>
		</div>
	</div>
</nav>

<header id="header">
    @* Stacked divs........ *@

    @* Text div (overlayed) *@
    <div class="PageHeader d-flex align-items-center justify-content-center" style="position: absolute; z-index:1;">
        @* centered collumn... *@
        <div class="d-flex flex-column align-items-center">
            <img style="max-height:200px; max-width:200px;" src="PortfolioTemplateResources/assets/img/avataaars.svg" alt="..." />
            <br />
            <h1 style="color:white;">BRIAN HINKLE</h1>
            <!-- Icon Divider-->
            <div class="divider-custom divider-light">
                <div class="divider-custom-line"></div>
                <div class="divider-custom-icon"><i class="fas fa-star"></i></div>
                <div class="divider-custom-line"></div>
            </div>
            <p style="color:white;">Graphic Artist - Web Designer - Illustrator</p>
        </div>


    </div>

    @* Video div (under) *@
    <div class="PageHeader parallax" >       @* window div *@
        <video class="FullScreen" muted autoplay loop>
            <source src="videos/TestVid.mp4" type="video/mp4">
        </video>
    </div>
</header>

    
<div id="portfolio">
    <h2>Portfolio</h2>
    <br />
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
    <p>yo yo yo yo yoo yoy</p>
</div>


<div id="about">
    <!-- About Section-->
    <div class="page-section bg-primary text-white mb-0">
        <div class="container">
            <!-- About Section Heading-->
            <h2 class="page-section-heading text-center text-uppercase text-white">About</h2>
            <!-- Icon Divider-->
            <div class="divider-custom divider-light">
                <div class="divider-custom-line"></div>
                <div class="divider-custom-icon"><i class="fas fa-star"></i></div>
                <div class="divider-custom-line"></div>
            </div>
            <!-- About Section Content-->
            <div class="row">
                <div class="col-lg-4 ms-auto"><p class="lead">Freelancer is a free bootstrap theme created by Start Bootstrap. The download includes the complete source files including HTML, CSS, and JavaScript as well as optional SASS stylesheets for easy customization.</p></div>
                <div class="col-lg-4 me-auto"><p class="lead">You can create your own custom avatar for the masthead, change the icon in the dividers, and add your email address to the contact form to make it fully functional!</p></div>
            </div>
        </div>
    </div>
</div>


<div id="contact">
    <h2>Contact</h2>
    <br />
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
    <p>hey hey hey hey hey hey hey hey hey hey hey hey </p>
</div>
















@code{
    string pageUrl;
    IJSObjectReference jsObjRef;    // js interactor
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            pageUrl = NavManager.Uri;
            jsObjRef = await jsRuntime.InvokeAsync<IJSObjectReference>("import", "./Pages/Portfolio.razor.js");
            await jsObjRef.InvokeVoidAsync("init");
        }
    }

    public async Task ScrollToElementWithNavbarOffset(string elementId)
    {
        await jsObjRef.InvokeVoidAsync("ScrollToElementWithNavbarOffset", elementId);
    }
}
