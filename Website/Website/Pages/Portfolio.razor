@page "/Portfolio"
@using Website.Shared.Components.Animation
@layout Shared.Layouts.EmptyLayout;
@inject IJSRuntime jsRuntime;

<Parallax wrapperSpeed="1f"/>
<SALWrapper/>

<div id="BG">
    <div style="position:absolute; width:100%; height:100%; background-color:rgb(31, 32, 41);"/>
    <div class="Pattern" style="position:absolute; width:100%; height:100%;"/>
</div>

<nav id="PortfolioNavbar" class="navbar fixed-top navbar-expand-sm navbar-dark" style="background-color: rgba(33, 37, 41, .75);">
	<div  class="container-fluid">
	    <a href="/" class="navbar-brand mb-0 h1">Brian Hinkle</a>
        <button id="NavbarExpandButton" type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#navbarItems" aria-controls="navbarItems" aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
        
		<div class="collapse navbar-collapse" id="navbarItems">
            <ul class="nav-pills navbar-nav ms-auto">
                <li class="nav-item">
                    <a id="portfolioNavLink" class="nav-link" style="cursor: pointer;" @onclick:preventDefault @onclick="@( () => ScrollToElementWithNavbarOffset("portfolio") )"      >Portfolio</a>
                </li>
                <li class="nav-item">
                    <a id="aboutNavLink" class="nav-link" style="cursor: pointer;" @onclick:preventDefault @onclick="@( () => ScrollToElementWithNavbarOffset("about")     )"      >About</a>
                </li>
                <li class="nav-item">
                    <a id="contactNavLink" class="nav-link" style="cursor: pointer;" @onclick:preventDefault @onclick="@( () => ScrollToElementWithNavbarOffset("contact")   )"      >Contact</a>
                </li>
            </ul>
		</div>
	</div>
</nav>

<div id="ParallaxWrapper">
    <header id="header" class="ParallaxContainer d-flex flex-column align-items-center justify-content-center" style="width:100vw; height:90vh; position:relative; overflow:hidden;">
        <video muted autoplay loop class="ParallaxElement" data-parallaxspeed=".25" style="position: absolute; min-height: 100%; min-width: 100%;">
            <source src="videos/TestVid.mp4" type="video/mp4">
            @* we should probably porvide some fallback source videos too like webm and ogg *@
        </video>
    
        <div class="d-flex flex-column align-items-center justify-content-center" style="position: relative; min-height: 100%; min-width: 100%; background-color: rgba(26, 188, 156, .5);">
            @*<img style="max-height:100px; max-width:100px;" src="PortfolioTemplateResources/assets/img/avataaars.svg" alt="..." />*@
            <br />
            <h1 style="color:white;">BRIAN HINKLE</h1>

            <!-- Make divider here-->
                
            <p style="color:white;">Unreal Developer</p>
        </div>
    </header>


    <section id="portfolio" class="page-section portfolio-section">
        <div class="row align-items-center">
            <div class="col-4">
                <div class="dots-pattern"/>
            </div>

            <h1 class="col-4 page-section-heading text-center">Portfolio</h1>
                            
            <div class="col-4">
                <div class="dots-pattern"/>
            </div>
        </div>
    




        
        <section class="portfolio-item">

                <div class="container" style="position:relative;">
                    <div class="row align-items-center mb-5" style="height: 400px; background-color:rgba(255,255,255,.25);">
                        <div data-sal-wrapper="zoom-out" class="col-md-4">
                            <h2 class="text-center text-white">Strength collision queries</h2>
                        </div>

                        <div class="col-md-8 d-flex flex-column align-items-center justify-content-center" style="position:relative; height:100%; overflow:hidden;">
                            <video muted autoplay loop style="position: absolute; min-height: 100%; width: 100%;">
                                <source src="videos/Portfolio/Demos/Demo_StrengthCollisionQueries.mp4" type="video/mp4">
                            </video>
                        </div>
                    </div>
                    <div data-sal-wrapper="zoom-out" class="row align-items-center">
                        <div class="col-md-2"/>
                        <div class="col-md-8 text-center text-white">
                            <p>
                                These are custom collision queries that are dependent on the concept of strength, becoming weaker as they ricochet and travel through penetrable material (the air as well). It is built on top of a collection of specialized collision queries which introduce the concept of penetrations while still keeping the distinction between blocking hits and overlaps (trigger boxes). These optionally provide exit hit results. All collision queries are generic to both line traces and shape sweeps.
                                <br>
                                This demo shows strength collision queries being used with sphere sweeping in a shooter-type game.
                            </p>
                        </div>
                        <div class="col-md-2"/>
                    </div>
                </div>

        </section>
        <section class="portfolio-item">

                <div class="container" style="position:relative;">
                    <div class="row align-items-center mb-5" style="height: 400px; background-color:rgba(255,255,255,.25);">
                        <div data-sal-wrapper="zoom-out" class="col-md-4">
                            <h2 class="text-center text-white">Sword Game</h2>
                        </div>

                        <div class="col-md-8 d-flex flex-column align-items-center justify-content-center" style="position:relative; height:100%; overflow:hidden;">
                            <video muted autoplay loop style="position: absolute; min-height: 100%; width: 100%;">
                                <source src="videos/Portfolio/Demos/Demo_SwordGame.mp4" type="video/mp4">
                            </video>
                        </div>
                    </div>
                    <div data-sal-wrapper="zoom-out" class="row align-items-center">
                        <div class="col-md-2"/>
                        <div class="col-md-8 text-center text-white">
                            <p>
                                One day my brother and I decided to create a game in two weeks as a sort of unofficial game jam where there were no rules besides the time constraint. The result was a scary/funny hide and seek game to play online with friends! This project was 100% in blueprints.
                            </p>
                        </div>
                        <div class="col-md-2"/>
                    </div>
                </div>

        </section>

        <section class="portfolio-item">

                <div class="container" style="position:relative;">
                    <div class="row align-items-center mb-5" style="height: 400px; background-color:rgba(255,255,255,.25);">
                        <div data-sal-wrapper="zoom-out" class="col-md-4">
                            <h2 class="text-center text-white">Ability System Setup</h2>
                        </div>

                        <div class="col-md-8 d-flex flex-column align-items-center justify-content-center" style="position:relative; height:100%; overflow:hidden;">
                            <video muted autoplay loop style="position: absolute; min-height: 100%; width: 100%;">
                                <source src="videos/Portfolio/Demos/Demo_AbilitySystemSetup.mp4" type="video/mp4">
                            </video>
                        </div>
                    </div>
                    <div data-sal-wrapper="zoom-out" class="row align-items-center">
                        <div class="col-md-2"/>
                        <div class="col-md-8 text-center text-white">
                            <p>
                                This is a C++ plugin extending Epic's Gameplay Ability System, creating a solid foundation for using GAS and eliminating boilerplate code. Its key feature, which is demonstrated above, is the AvatarActorExtension component.
                                <br>
                                The AvatarActorExtension component is a generalized component that can initialize/uninitialize an Avatar Actor, given an AbilitySystemComponent. It stays agnostic to AbilitySystemComponent location and supports any Avatar Actor. For Avatar Actors that are Pawns, there is a more specialized "PawnAvatarActorExtension" component which inherits and provides extra GAS input binding logic. 
                            </p>
                        </div>
                        <div class="col-md-2"/>
                    </div>
                </div>

        </section>
        <section class="portfolio-item">

                <div class="container" style="position:relative;">
                    <div class="row align-items-center mb-5" style="height: 400px; background-color:rgba(255,255,255,.25);">
                        <div data-sal-wrapper="zoom-out" class="col-md-4">
                            <h2 class="text-center text-white">Input Setup</h2>
                        </div>

                        <div class="col-md-8 d-flex flex-column align-items-center justify-content-center" style="position:relative; height:100%; overflow:hidden;">
                            <video muted autoplay loop style="position: absolute; min-height: 100%; min-width: 100%;">
                                <source src="videos/TestVid.mp4" type="video/mp4">
                            </video>
                        </div>
                    </div>
                    <div data-sal-wrapper="zoom-out" class="row align-items-center">
                        <div class="col-md-2"/>
                        <div class="col-md-8 text-center text-white">
                            <p>
                                Plugin improving the input workflow in C++. Makes use of Gameplay Tags to identify Input Actions using a configurable map in the plugin's Developer Settings. Other modules external from the game project's module can contribute to the map of Input Actions as long as they have us as a dependency.
                            </p>
                        </div>
                        <div class="col-md-2"/>
                    </div>
                </div>

        </section>


        
    </section>



        
    <!-- About Section-->
    <div id="about" style="position:relative;">
        <div class="page-section text-white mb-0">
            <div class="container">
                <!-- About Section Heading-->
                <h2 class="page-section-heading text-center text-uppercase" style="padding-bottom:2rem;">About</h2>
            
                <!-- Make divider here... -->


                @* 
                    Hi there! I'm an Unreal programmer passionate about creating games "the right way" with scalable and reusable gameplay systems!  Learning new things is what I strive for, and it's been a blast working towards  It began when I switched majors to computer science because of my fasination with game development. Growing up on computers, I've always had a strong connection with them It's been a blast up to this point, always learning ________. Growing up in a home with three brothers and eight computers, 
                Growing up in a home with three brothers, , a  As someone who has proven to himself that I can do , I believe I have what it takes to make a positive impact in other work environments.*@ 

                <!-- About Section Content-->
                <div class="row">
                    <div class="col-lg-2"/>
                    <div class="col-lg-4">
                        <p class="lead">
                            Blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah
                        </p>
                    </div>
                    <div class="col-lg-4">
                        <p class="lead">
                            Blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah
                        </p>
                    </div>
                    <div class="col-lg-2"/>
                </div>
            </div>
        </div>
    </div>


    <div style="position:relative;">
        <!-- Footer-->
        <footer class="text-center" style="padding-top: 5rem; padding-bottom: 5rem; background-color: rgba(44, 62, 80, .5); color: #fff;">
            <div id="contact" class="container">
                <div class="row">
                    <!-- Email -->
                    <div class="col-lg-3">
                        <img src="images/contact-email.png" style="height:1.6rem; margin:.75rem;"/>
                        <br>
                        b2hinkle@gmail.com
                    </div>
                    <!-- Phone -->
                    <div class="col-lg-3">
                        <img src="images/contact-phone.png" style="height:2rem; margin:.5rem;"/>
                        <br>
                        (704) 604 9356
                    </div>
                    <!-- Github -->
                    <div class="col-lg-3">
                        <img src="images/contact-github.png" style="height:2.5rem; margin:.25rem;"/>
                        <br>
                        <a href="https://github.com/brian2524">Brian2524</a>
                    </div>
                    <!-- Linkedin -->
                    <div class="col-lg-3">
                        <img src="images/contact-linkedin.png" style="height:2rem; margin:.5rem;"/>
                        <br>
                        <a href="https://www.linkedin.com/in/brian-hinkle-0320801b5">Linkedin</a>
                    </div>
                </div>
            </div>
        </footer>
        <!-- Copyright Section-->
        <div class="d-flex align-items-center justify-content-center text-center text-white" style="height: 15px; width: 100%; padding-top: 1.5rem; padding-bottom: 1.5rem; background-color: #1a252f;">
            @*<small>Copyright &copy; Your Website 2021</small>*@
            <small>@year Brian Hinkle</small>
        </div>
    </div>
</div>
        


    


@code 
{
    private IJSObjectReference jsObjRef;    // js interactor
    private int year = DateTime.Now.Year;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            jsObjRef = await jsRuntime.InvokeAsync<IJSObjectReference>("import", "./Pages/Portfolio.razor.js");
            await jsObjRef.InvokeVoidAsync("OnAfterRenderAsync");
        }
    }

    public async Task ScrollToElementWithNavbarOffset(string elementId)
    {
        await jsObjRef.InvokeVoidAsync("ScrollToElementWithNavbarOffset", elementId);
    }
}
