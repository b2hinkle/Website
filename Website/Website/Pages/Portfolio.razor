@page "/Portfolio"
@using Website.Shared.Components
@layout Shared.Layouts.EmptyLayout;
@inject IJSRuntime jsRuntime;
@inject NavigationManager NavManager;

<nav id="PortfolioNavbar" class="navbar fixed-top navbar-expand-sm navbar-dark" style="background-color: rgba(33, 37, 41, .75); transition: background-color .25s;">
	<div  class="container-fluid">
	    <a href="/" class="navbar-brand mb-0 h1">Brian Hinkle</a>
        <button id="NavbarExpandButton" type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#navbarItems" aria-controls="navbarItems" aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
        
		<div class="collapse navbar-collapse" id="navbarItems">
            <ul class="nav-pills navbar-nav ms-auto">
                @*
                    href here is strictly used for the navbar button highlighting for ScrollSpy. We don't have it taking us anywhere since Blazor is a pain with hash routes.
                    Instead we're just manually scrolling using javascript, also this allows us to implement scrolling with the NavbarOffset.
                *@
                <li class="nav-item">
                    <a class="nav-link" @onclick:preventDefault href="#portfolio"   @onclick="@( () => ScrollToElementWithNavbarOffset("portfolio")     )"      >Portfolio</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" @onclick:preventDefault href="#about"       @onclick="@( () => ScrollToElementWithNavbarOffset("about")         )"      >About</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" @onclick:preventDefault href="#contact"     @onclick="@( () => ScrollToElementWithNavbarOffset("contact")       )"      >Contact</a>
                </li>
                @*NOTE: Only reason we have this "Header" li is so we can take advantage of ScrollSpy's section watching logic for the header. We don't want a navbar button for the header but ScrollSpy requires it so we collapse it.*@
                <li class="nav-item collapse">
                    <a class="nav-link" @onclick:preventDefault href="#header">Header</a>
                </li>
            </ul>
		</div>
	</div>
</nav>

    <!-- Masthead-->
<header id="header" class="text-center">
    

</header>
<br />
<br />
<br />
<br />
<br />
    <div class="container-fluid parallax" style="border: 3px solid green; border-color: black; background-color: yellow; height: 200px; position: relative;">
        
        
        
            <video class="FullScreen" muted autoplay loop>
                <source src="videos/TestVid.mp4" type="video/mp4">
            </video>

        <h1 style="margin: 0; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);">Title!!!!!</h1>

    </div>
    <h4 id="portfolio">Portfolio</h4>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <h4 id="about">About</h4>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <img class="thumbnail" src="images/background.png" alt="image">
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <h4 id="contact">Contact</h4>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>
    <p>...</p>















@code{
    string pageUrl;
    IJSObjectReference jsObjRef;    // js interactor
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            pageUrl = NavManager.Uri;
            jsObjRef = await jsRuntime.InvokeAsync<IJSObjectReference>("import", "./Pages/Portfolio.razor.js");
            await jsObjRef.InvokeVoidAsync("init");
        }
    }

    public async Task ScrollToElementWithNavbarOffset(string elementId)
    {
        await jsObjRef.InvokeVoidAsync("ScrollToElementWithNavbarOffset", elementId);
    }
}
