@page "/ParallaxWindowTest"
@inject IJSRuntime jsRuntime;
@layout Website.Shared.Layouts.EmptyLayout

<PageTitle>ParallaxWindowTest</PageTitle>

<p class="bg-success rellax" data-rellax-speed="0">
      I’m extra slow and smooth
    <br/>
      I’m extra slow and smooth
    <br/>
      I’m extra slow and smooth
      I’m extra slow and smooth
      I’m extra slow and smooth
      I’m extra slow and smooth
    <br/>
      I’m extra slow and smooth
    <br/>
</p>
<p class="bg-success rellax" data-rellax-speed="0">
      I’m extra slow and
    <br/>
      I’m extra slow and
    <br/>
      I’m extra slow and
      I’m extra slow and
      I’m extra slow and
      I’m extra slow and
    <br/>
      I’m extra slow and
    <br/>
</p>

@* Example of a parallax window thingy. *@
<div style="position: relative; overflow: hidden; height: 30vh;">                                               @* video cropper div *@
    <div class="rellax">
        <video class="FullScreen" data-rellax-speed="4" data-rellax-zindex="0" muted autoplay loop>             @* fullscreen video *@
            <source src="videos/TestVid.mp4" type="video/mp4">
        </video>
    </div>
    <h1 class="text-center" style="position: relative; z-index: 2; padding-top: 20vh; color: #ffffff;">Hellooooooooooo</h1>
</div>


<br/>
<p class="bg-success rellax" data-rellax-speed="0">
      I’m extra 
    <br/>
      I’m extra   
    <br/>
      I’m extra 
      I’m extra 
      I’m extra 
      I’m extra 
    <br/>
      I’m extra 
    <br/>
</p>

    


<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>


@code{
    IJSObjectReference jsObjRef;    // js interactor
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
       jsObjRef = await jsRuntime.InvokeAsync<IJSObjectReference>("import", "./Pages/TestPages/ParallaxWindowTest.razor.js");
       await jsObjRef.InvokeVoidAsync("init");
    }
}