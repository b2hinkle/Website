@*
    Known issues: 
        - Very jittery on certain browsers since page scrolling is out of my control for this solution

    This component provides the ability to parallax by providing .ParallaxContainer and .ParallaxElement classes and data-parallaxspeed data attribute.
    Workflow:
    - .ParallaxElement: Actual element that will parallax
        - must be an immediate child of .ParallaxContainer
    - data-parallaxspeed: Data attribute placed on ParallaxElement to modify its scroll speed (it's a multiplier)
        - 1 is normal scroll speed
        - 0 is no scrolling
    - .ParallaxContainer: Determines the parallax positioning of its parallax elements. Any parallax element should be at its original position when the container reaches the middle of the viewport.
*@
@inject IJSRuntime jsRuntime;
@code 
{
    private IJSObjectReference jsObjRef;    // js interactor
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            jsObjRef = await jsRuntime.InvokeAsync<IJSObjectReference>("import", "./Shared/Components/ParallaxSolutions/OldParallax.razor.js");
            await jsObjRef.InvokeVoidAsync("OnAfterRenderAsync");
        }
    }
}
